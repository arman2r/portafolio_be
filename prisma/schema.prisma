// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider        = "prisma-client-js"
  output          = "../generated/prisma"
  previewFeatures = ["postgresqlExtensions"]
}

datasource db {
  provider   = "postgresql"
  url        = env("DATABASE_URL")
  extensions = [pgcrypto]
  relationMode = "prisma"
}

model skill {
  id          Int      @id @default(autoincrement())
  title       String
  description String
  workedTime  Int
  createdAt   DateTime @default(now()) @db.Timestamptz
  updatedAt   DateTime @updatedAt @db.Timestamptz
}

model experience {
  id          Int      @id @default(autoincrement())
  company     String
  position    String
  description String
  yearStart   String
  yearEnd     String
  createdAt   DateTime @default(now()) @db.Timestamptz
  updatedAt   DateTime @updatedAt @db.Timestamptz
}

model subscribers {
  id              String            @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  email           String            @unique
  names           String?
  lastNames       String?
  phone           String?
  isConfirmed     Int?
  createdAt       DateTime          @default(now()) @db.Timestamptz
  updatedAt       DateTime          @updatedAt @db.Timestamptz
  likeSubscribers likeSubscribers[]
}

model userAdmin {
  id          String   @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  email       String   @unique
  names       String?
  lastNames   String?
  phone       String?
  password    String
  isConfirmed Int?
  createdAt   DateTime @default(now()) @db.Timestamptz
  updatedAt   DateTime @updatedAt @db.Timestamptz
}

model likeSubscribers {
  id           Int         @id @default(autoincrement())
  subscriberId String
  subscriber   subscribers @relation(fields: [subscriberId], references: [id])
  urlSection   String
  createdAt    DateTime    @default(now()) @db.Timestamptz
  updatedAt    DateTime    @updatedAt @db.Timestamptz

  @@index([subscriberId])
}
